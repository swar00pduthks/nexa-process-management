version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nexa-postgres
    environment:
      POSTGRES_DB: nexa_process_management
      POSTGRES_USER: nexa_user
      POSTGRES_PASSWORD: nexa_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/src/main/resources/db/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - nexa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexa_user -d nexa_process_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: nexa-api
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DB_USERNAME=nexa_user
      - DB_PASSWORD=nexa_password
      - JWT_SECRET=nexa-process-management-secret-key-2024
      - JWT_EXPIRATION=86400000
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
    ports:
      - "8080:8080"
    networks:
      - nexa-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    volumes:
      - api_logs:/app/logs

  # React Web Application
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: nexa-web
    ports:
      - "80:80"
    networks:
      - nexa-network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Redis Cache (Optional - for session management)
  redis:
    image: redis:7-alpine
    container_name: nexa-redis
    ports:
      - "6379:6379"
    networks:
      - nexa-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: nexa-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - nexa-network
    depends_on:
      - web
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  api_logs:
    driver: local

networks:
  nexa-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16


